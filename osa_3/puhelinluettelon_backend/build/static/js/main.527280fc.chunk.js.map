{"version":3,"sources":["components/Persons.js","components/Filter.js","components/NewPerson.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","onDeleteClick","name","number","onClick","Persons","filteredPersons","map","key","Filter","props","value","onChange","NewPerson","onSubmit","nameValue","onNameChange","numberValue","onNumberChange","type","Notification","message","error","className","baseUrl","axios","get","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","newSearch","setNewSearch","newMessage","setNewMessage","newError","setNewError","useEffect","personService","then","response","data","console","log","length","filter","toLowerCase","includes","event","target","some","p","oldPerson","find","window","confirm","catch","setTimeout","preventDefault","concat","delPerson","ReactDOM","render","document","getElementById"],"mappings":"iNAEMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAX,OACX,6BACGD,EAAOE,KADV,IACiBF,EAAOG,OADxB,IACgC,4BAAQC,QAAS,kBAAMH,EAAcD,KAArC,YAWrBK,EAPC,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAiBL,EAAnB,EAAmBA,cAAnB,OACZ,6BACKK,EAAgBC,KAAI,SAAAP,GAAM,OAC3B,kBAAC,EAAD,CAAQQ,IAAKR,EAAOE,KAAMF,OAAQA,EAAQC,cAAeA,SCChDQ,EAVF,SAACC,GAAD,OACX,+CAEE,2BACEC,MAAOD,EAAMC,MACbC,SAAUF,EAAME,aCmBPC,EAxBC,SAACH,GAAD,OACd,6BACE,0BAAMI,SAAUJ,EAAMI,UACpB,qCAEE,2BACEH,MAAOD,EAAMK,UACbH,SAAUF,EAAMM,gBAGpB,uCAEE,2BACEL,MAAOD,EAAMO,YACbL,SAAUF,EAAMQ,kBAGpB,6BACE,4BAAQC,KAAK,UAAb,WCAKC,EAlBM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC7B,OAAgB,OAAZD,EACK,MACY,IAAVC,EAEL,yBAAKC,UAAU,SACVF,GAKL,yBAAKE,UAAU,SACVF,I,gBCbTG,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,IAeJ,EAZA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAWd,EARA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,IAOxB,EAJA,SAACE,GACZ,OAAOJ,IAAMM,OAAN,UAAgBP,EAAhB,YAA2BK,KCwGvBG,EAhHH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERG,EAFQ,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGRK,EAHQ,KAGGC,EAHH,OAIgBN,oBAAS,GAJzB,mBAIRO,EAJQ,KAICC,EAJD,OAKoBR,mBAAS,IAL7B,mBAKRS,EALQ,KAKGC,EALH,OAMsBV,mBAAS,MAN/B,mBAMRW,EANQ,KAMIC,EANJ,OAOkBZ,oBAAS,GAP3B,mBAORa,EAPQ,KAOEC,EAPF,KAShBC,qBAAU,WACRC,IAEGC,MAAK,SAAAC,GACJhB,EAAWgB,EAASC,WAEvB,IACHC,QAAQC,IAAI,SAAUpB,EAAQqB,OAAQ,WAEtC,IAgEMjD,EAAkBkC,EACpBN,EACAA,EAAQsB,QAAO,SAAAxD,GAAM,OAAIA,EAAOE,KAAKuD,cAAcC,SAAShB,EAAUe,kBAa1E,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcpC,QAASuB,EAAYtB,MAAOwB,IAC1C,kBAAC,EAAD,CAAQnC,MAAO+B,EAAW9B,SAzBH,SAAC+C,GAC1BN,QAAQC,IAAIK,EAAMC,OAAOjD,OACzBgC,EAAagB,EAAMC,OAAOjD,OAC1B8B,GAAW,MAuBT,uCACA,kBAAC,EAAD,CAAW3B,SArFG,SAAC6C,GACjB,IAAM3D,EAAS,CACXE,KAAMkC,EACNjC,OAAQmC,GAGZ,GAAIJ,EAAQ2B,MAAK,SAAAC,GAAC,OAAIA,EAAE5D,OAASkC,KAAU,CACzC,IAAM2B,EAAY7B,EAAQ8B,MAAM,qBAAE9D,OAAmBkC,KACrDiB,QAAQC,IAAR,qBAA0BS,EAAU5D,SACpCkD,QAAQC,IAAR,qBAA0BtD,EAAOG,SAC7B8D,OAAOC,QAAP,UAAkB9B,EAAlB,gFACFa,EACUc,EAAUlC,GAAI7B,GACrBkD,MAAK,SAAAC,GACJhB,EAAWD,EAAQ3B,KAAI,SAAAP,GAAM,OAAIA,EAAO6B,KAAOkC,EAAUlC,GAAKsB,EAASC,KAAOpD,MAC9E6C,EAAc,WAAD,OAAY7C,EAAOE,UAEjCiE,OAAM,SAAC7C,GACN+B,QAAQC,IAAIhC,GACZyB,GAAY,GACZF,EAAc,kBAAD,OACO7C,EAAOE,KADd,0CAGbkE,YAAW,WACTvB,EAAc,MACdE,GAAY,KACX,aAKTY,EAAMU,iBAENpB,EACUjD,GACPkD,MAAK,SAAAC,GACJhB,EAAWD,EAAQoC,OAAOnB,EAASC,OACnCf,EAAW,IACXE,EAAa,OAEd4B,OAAM,SAAA7C,GACLuB,EAAc,6BAAD,OAA8BvB,EAAM6B,SAASC,KAA7C,oDACbL,GAAY,MAEhBF,EAAc,SAAD,OAAU7C,EAAOE,QAyCEa,UAAWqB,EAASpB,aArC/B,SAAC2C,GACxBN,QAAQC,IAAIK,EAAMC,OAAOjD,OACzB0B,EAAWsB,EAAMC,OAAOjD,QAoCXM,YAAaqB,EAAWpB,eAjCZ,SAACyC,GAC1BN,QAAQC,IAAIK,EAAMC,OAAOjD,OACzB4B,EAAaoB,EAAMC,OAAOjD,UAgCxB,uCACA,kBAAC,EAAD,CAASL,gBAAiBA,EAAiBL,cApBzB,SAACsE,GACjBN,OAAOC,QAAP,iBAAyBK,EAAUrE,KAAnC,SACF+C,EACQsB,EAAU1C,IACjBqB,MAAK,SAAAC,GACJhB,EAAWD,EAAQsB,QAAO,SAAAxD,GAAM,OAAIA,EAAO6B,KAAO0C,EAAU1C,UAE9DgB,EAAc,WAAD,OAAY0B,EAAUrE,aChGzCsE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.527280fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ( {person, onDeleteClick} ) => (\r\n    <div>\r\n      {person.name} {person.number} <button onClick={() => onDeleteClick(person)}>delete</button>\r\n    </div>\r\n  )\r\n\r\nconst Persons = ({filteredPersons, onDeleteClick}) => (\r\n    <div>\r\n        {filteredPersons.map(person =>\r\n        <Person key={person.name} person={person} onDeleteClick={onDeleteClick} />)}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst Filter = (props) => (\r\n    <div>\r\n      Filter results:\r\n      <input \r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  export default Filter","import React from 'react';\r\n\r\nconst NewPerson = (props) => (\r\n    <div>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          Name: \r\n          <input \r\n            value={props.nameValue}\r\n            onChange={props.onNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          Number: \r\n          <input \r\n            value={props.numberValue}\r\n            onChange={props.onNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  export default NewPerson","import React from 'react';\r\n\r\nconst Notification = ({ message, error }) => {\r\n    if (message === null) {\r\n      return null\r\n    } else if (error === false) {\r\n        return (\r\n          <div className=\"notif\">\r\n              {message}\r\n          </div>\r\n        )\r\n    } else {\r\n        return (\r\n          <div className=\"error\">\r\n              {message}\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { \r\n  getAll,\r\n  create, \r\n  update,\r\n  remove\r\n}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport NewPerson from './components/NewPerson'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const [ newError, setNewError ] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addPerson = (event) => {\n    const person = {\n        name: newName,\n        number: newNumber\n    }\n\n    if (persons.some(p => p.name === newName)) {\n      const oldPerson = persons.find( ({name}) => name === newName)\n      console.log(`old person ${oldPerson.number}`)\n      console.log(`new person ${person.number}`)\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(oldPerson.id, person)\n          .then(response => {\n            setPersons(persons.map(person => person.id === oldPerson.id ? response.data : person))\n            setNewMessage(`Updated ${person.name}`)\n          })\n          .catch((error) => {\n            console.log(error)\n            setNewError(true)\n            setNewMessage(\n              `Information of ${person.name} has already been removed from server`\n              )\n            setTimeout(() => {\n              setNewMessage(null)\n              setNewError(false)\n            }, 5000)\n          })\n      }\n\n    } else {\n      event.preventDefault()\n    \n      personService\n        .create(person)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setNewMessage(`Person validation failed: ${error.response.data} is shorter than the minimum allowed length (3)`)\n          setNewError(true)\n        })\n      setNewMessage(`Added ${person.name}`)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    console.log(event.target.value)\n    setNewSearch(event.target.value)\n    setShowAll(false)\n  }\n\n  const filteredPersons = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const onDeleteClick = (delPerson) => {\n    if (window.confirm(`Delete ${delPerson.name} ?`)) {\n      personService\n      .remove(delPerson.id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== delPerson.id))\n      })\n      setNewMessage(`Deleted ${delPerson.name}`)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newMessage} error={newError} />\n      <Filter value={newSearch} onChange={handleSearchChange} />\n      <h2>Add new</h2>\n      <NewPerson onSubmit={addPerson} nameValue={newName} onNameChange={handleNameChange} \n                 numberValue={newNumber} onNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} onDeleteClick={onDeleteClick} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}